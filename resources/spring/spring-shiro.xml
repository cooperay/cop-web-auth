<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       					   http://www.springframework.org/schema/util  
     					   http://www.springframework.org/schema/util/spring-util-4.0.xsd"
       default-lazy-init="true">

    <description>Shiro Configuration</description>

<context:property-placeholder ignore-unresolvable="true" location="classpath*:/spring/server.properties" />
   		 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="casRealm" />
			<!-- <property name="sessionManager" ref="sessionManager"/> -->
					<!-- 使用下面配置的缓存管理器 -->
			<!-- <property name="cacheManager" ref="cacheManager" /> -->
		</bean>
		
		<bean id="casRealm" class="com.jy.interceptor.shiro.ShiroCasRealm">  
	      <property name="cachingEnabled" value="true" />  
	       <!--  <property name="authenticationCachingEnabled" value="true" />  
	        <property name="authenticationCacheName" value="authenticationCache" />  
	        <property name="authorizationCachingEnabled" value="true" />  
	        <property name="authorizationCacheName" value="authorizationCache" /> -->
	        <property name="casServerUrlPrefix" value="${web.server.cas.url}" />  <!--该地址为cas server地址 --> 
	        <property name="casService" value="${web.server.local.url}" /> <!-- 该地址为client1 的访问地址+ 下面配置的cas  filter -->    
	    </bean>  
	    
	  <!--   <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
	          <property name="redirectUrl" 
	         value="http://192.168.99.202/cas/logout?service=http://localhost:8080/Auth/"/>
		</bean> -->
		
		<!-- 項目自定义的Realm -->
	    <!-- <bean id="ShiroRealm" class="com.jy.interceptor.shiro.ShiroRealm" ></bean> -->
		
		<!-- Shiro Filter -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />		
			<property name="loginUrl" value="${web.server.cas.login.url}?service=${web.server.cas.url}" />		
			<property name="unauthorizedUrl" value="/loginIndex" />
				<!-- anon:匿名拦截器，即不需要登录即可访问；一般用于静态资源过滤
            		 authc:如果没有登录会跳到相应的登录页面登录
            		 user:用户拦截器，用户已经身份验证/记住我登录的都可 -->
			<property name="filters">  
	            <util:map>  
	                <!-- 添加casFilter到shiroFilter -->  
	               <!--  <entry key="logout" value-ref="logout"></entry> -->
	                <entry key="casFilter" value-ref="casFilter"/>  
	                <entry key="authc" value-ref="formAuthenticationFilter"/>
	            </util:map>  
	        </property>  
			
			
			<property name="filterChainDefinitions">
				<value>
					/shiro-cas* = casFilter 
		           	/static/js/system/login/**  =anon
		           	/static/js/system/**		=anon
					/static/** 				    =anon
				    /favicon.ico                =anon
		           	/verifyCode/**		        =anon
		           	/system_login*	 			=anon
		           	/system_logout*	 			=anon
		           	/**							=authc
				</value>
			</property>
		</bean>
		
		<bean id="formAuthenticationFilter" 
   			class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"/>
       
       <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
	        <!-- 配置验证错误时的失败页面  -->  
	        <property name="failureUrl" value="/error.jsp"/>
	    </bean>  
	    
       
      <!-- AOP式方法级权限检查 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>